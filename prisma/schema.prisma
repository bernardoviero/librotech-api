model Autores {
  id     String      @id
  nome   String
  livros Livros[]
  ativo         Boolean    @default(true)
}

model Emails {
  id            String     @id
  code          String
  usuario       Usuarios   @relation(fields: [usuarioId], references: [id])
  usuarioId     String
  dataCadastro  DateTime   @default(now())
  ativo         Boolean    @default(true)
}

model Usuarios {
  id            String       @id
  nome          String
  email         String    @unique
  senha         String
  dataCadastro  DateTime  @default(now())
  emprestimos   Emprestimos[]  // Adiciona campo de relação oposta
  emails        Emails[]  // Adiciona campo de relação oposta
  ativo         Boolean    @default(true)
}

model Livros {
  id             String       @id
  titulo         String
  genero         String?
  dataPublicacao DateTime?
  autor          Autores     @relation(fields: [autorId], references: [id])
  autorId        String     // Alterado para String
  emprestimos    Emprestimos[]  
  ativo         Boolean    @default(true)
}

model Emprestimos {
  id              String       @id
  livro           Livros     @relation(fields: [livroId], references: [id])
  livroId         String     // Alterado para String
  usuario         Usuarios   @relation(fields: [usuarioId], references: [id])
  usuarioId       String     // Alterado para String
  dataEmprestimo  DateTime
  dataDevolucao   DateTime?
  dataDevolvido   DateTime?
  ativo         Boolean    @default(true)
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}